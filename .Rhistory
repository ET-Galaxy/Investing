# Define stock tickers
stocks <- c(
AAPL = 0.06, NVDA = 0.06, AVGO = 0.04, TSM = 0.04,
GOOG = 0.06, META = 0.06, KO = 0.04, LIN = 0.08,
LLY = 0.06, JPM = 0.08, BRKB = 0.08, UBER = 0.04,
AXP = 0.06, SONY = 0.04, PANW = 0.04, NFLX = 0.04,
GE = 0.04, SPOT = 0.04, ORCL = 0.04
)
set.seed=1
palet <- sample(colors(), 19)
wealth_dist<- data.frame(Start= as.vector(stocks), row.names = names(stocks))
props=matrix(nrow=19, ncol=horizon)
props[,1]=as.vector(stocks)
portfolio<-numeric(horizon)
portfolio[1]<-1
# Read all CSV files and store them in a named list
data_list <- lapply(names(stocks), function(ticker) {
df <- read.csv(paste0(ticker, ".csv"))[,-7]  # Remove 7th column
df$Date <- as.Date(df$Date, format="%d/%m/%Y")  # Convert Date column
df<-arrange(df, Date)
df$Price <- gsub(",", "", df$Price)  # Remove commas
df$Price <- trimws(df$Price)  # Trim spaces
df$Price <- as.numeric(df$Price)  # Convert to numeric
df$Change <- c(diff(df$Price) / df$Price[-301],NA)  # Calculate daily price change
df$Price<-df$Price/df$Price[1]
return(df)
})
paste0(a,b,c)
paste0("a","b","c")
# Read all CSV files and store them in a named list
data_list <- lapply(names(stocks), function(ticker) {
df <- read.csv(paste0("dataset/",ticker, ".csv"))[,-7]  # Remove 7th column
df$Date <- as.Date(df$Date, format="%d/%m/%Y")  # Convert Date column
df<-arrange(df, Date)
df$Price <- gsub(",", "", df$Price)  # Remove commas
df$Price <- trimws(df$Price)  # Trim spaces
df$Price <- as.numeric(df$Price)  # Convert to numeric
df$Change <- c(diff(df$Price) / df$Price[-301],NA)  # Calculate daily price change
df$Price<-df$Price/df$Price[1]
return(df)
})
library(tidyverse)
library(xts)
initial_wealth=1
horizon=301
# Define stock tickers
stocks <- c(
AAPL = 0.06, NVDA = 0.06, AVGO = 0.04, TSM = 0.04,
GOOG = 0.06, META = 0.06, KO = 0.04, LIN = 0.08,
LLY = 0.06, JPM = 0.08, BRKB = 0.08, UBER = 0.04,
AXP = 0.06, SONY = 0.04, PANW = 0.04, NFLX = 0.04,
GE = 0.04, SPOT = 0.04, ORCL = 0.04
)
set.seed=1
palet <- sample(colors(), 19)
wealth_dist<- data.frame(Start= as.vector(stocks), row.names = names(stocks))
props=matrix(nrow=19, ncol=horizon)
props[,1]=as.vector(stocks)
portfolio<-numeric(horizon)
portfolio[1]<-1
# Read all CSV files and store them in a named list
data_list <- lapply(names(stocks), function(ticker) {
df <- read.csv(paste0("dataset/",ticker, ".csv"))[,-7]  # Remove 7th column
df$Date <- as.Date(df$Date, format="%d/%m/%Y")  # Convert Date column
df<-arrange(df, Date)
df$Price <- gsub(",", "", df$Price)  # Remove commas
df$Price <- trimws(df$Price)  # Trim spaces
df$Price <- as.numeric(df$Price)  # Convert to numeric
df$Change <- c(diff(df$Price) / df$Price[-301],NA)  # Calculate daily price change
df$Price<-df$Price/df$Price[1]
return(df)
})
# Assign names to the list for easier reference
names(data_list) <- names(stocks)
#Percentage Change to the next day closing price
change_df<-data_list[[1]]$Date[-301]
for (i in 1:length(stocks)){
change_df<-cbind(change_df,data_list[[i]]$Change[-301])
}
rebalance_days<-c()
for (i in 2:horizon){
wealth_dist[,i]<-wealth_dist[,i-1]*(1+change_df[i-1,-1])
portfolio[i]=sum(wealth_dist[,i])
props[,i]<-wealth_dist[,i]/portfolio[i]
if (any(abs(props[,i]-props[,1])>50*props[,1])){
wealth_dist[,i]<-portfolio[i]*props[,1]
rebalance_days<-c(rebalance_days,i)
}
}
#Max drawdown
portfolio_max<-numeric(301)
portfolio_max[1]<-portfolio[1]
for (i in 1:301){
portfolio_max[i]<-max(portfolio_max,portfolio[i])
}
drawdown<-portfolio/portfolio_max
plot(as.xts(drawdown,data_list[[1]]$Date))
names(portfolio)<-names(wealth_dist)<-data_list[[1]]$Date
rebalance_days<-data_list[[1]]$Date[rebalance_days]
plot(as.xts(portfolio), type = "l", col = "turquoise", lwd = 2,
xlab = "Time", ylab = "Price", main = "Portfolio")
library(tidyverse)
library(xts)
initial_wealth=1
horizon=301
# Define stock tickers
stocks <- c(
AAPL = 0.06, NVDA = 0.06, AVGO = 0.04, TSM = 0.04,
GOOG = 0.06, META = 0.06, KO = 0.04, LIN = 0.08,
LLY = 0.06, JPM = 0.08, BRKB = 0.08, UBER = 0.04,
AXP = 0.06, SONY = 0.04, PANW = 0.04, NFLX = 0.04,
GE = 0.04, SPOT = 0.04, ORCL = 0.04
)
set.seed=1
palet <- sample(colors(), 19)
wealth_dist<- data.frame(Start= as.vector(stocks), row.names = names(stocks))
props=matrix(nrow=19, ncol=horizon)
props[,1]=as.vector(stocks)
portfolio<-numeric(horizon)
portfolio[1]<-1
# Read all CSV files and store them in a named list
data_list <- lapply(names(stocks), function(ticker) {
df <- read.csv(paste0("dataset/",ticker, ".csv"))[,-7]  # Remove 7th column
df$Date <- as.Date(df$Date, format="%d/%m/%Y")  # Convert Date column
df<-arrange(df, Date)
df$Price <- gsub(",", "", df$Price)  # Remove commas
df$Price <- trimws(df$Price)  # Trim spaces
df$Price <- as.numeric(df$Price)  # Convert to numeric
df$Change <- c(diff(df$Price) / df$Price[-301],NA)  # Calculate daily price change
df$Price<-df$Price/df$Price[1]
return(df)
})
# Assign names to the list for easier reference
names(data_list) <- names(stocks)
#Percentage Change to the next day closing price
change_df<-data_list[[1]]$Date[-301]
for (i in 1:length(stocks)){
change_df<-cbind(change_df,data_list[[i]]$Change[-301])
}
rebalance_days<-c()
for (i in 2:horizon){
wealth_dist[,i]<-wealth_dist[,i-1]*(1+change_df[i-1,-1])
portfolio[i]=sum(wealth_dist[,i])
props[,i]<-wealth_dist[,i]/portfolio[i]
if (any(abs(props[,i]-props[,1])>0.2*props[,1])){
wealth_dist[,i]<-portfolio[i]*props[,1]
rebalance_days<-c(rebalance_days,i)
}
}
#Max drawdown
portfolio_max<-numeric(301)
portfolio_max[1]<-portfolio[1]
for (i in 1:301){
portfolio_max[i]<-max(portfolio_max,portfolio[i])
}
drawdown<-portfolio/portfolio_max
plot(as.xts(drawdown,data_list[[1]]$Date))
names(portfolio)<-names(wealth_dist)<-data_list[[1]]$Date
rebalance_days<-data_list[[1]]$Date[rebalance_days]
plot(as.xts(portfolio), type = "l", col = "turquoise", lwd = 2,
xlab = "Time", ylab = "Price", main = "Portfolio")
library(tidyverse)
library(xts)
initial_wealth=1
horizon=301
# Define stock tickers
stocks <- c(NVDA = 1)
set.seed=1
palet <- sample(colors(), 1)
wealth_dist<- data.frame(Start= as.vector(stocks), row.names = names(stocks))
portfolio<-numeric(horizon)
portfolio[1]<-1
# Read all CSV files and store them in a named list
data_list <- lapply(names(stocks), function(ticker) {
df <- read.csv(paste0("dataset/",ticker, ".csv"))[,-7]  # Remove 7th column
df$Date <- as.Date(df$Date, format="%d/%m/%Y")  # Convert Date column
df<-arrange(df, Date)
df$Price <- gsub(",", "", df$Price)  # Remove commas
df$Price <- trimws(df$Price)  # Trim spaces
df$Price <- as.numeric(df$Price)  # Convert to numeric
df$Change <- c(diff(df$Price) / df$Price[-301],NA)  # Calculate daily price change
df$Price<-df$Price/df$Price[1]
return(df)
})
# Assign names to the list for easier reference
names(data_list) <- names(stocks)
#Percentage Change to the next day closing price
change_df<-data_list[[1]]$Date[-301]
for (i in 1:length(stocks)){
change_df<-cbind(change_df,data_list[[i]]$Change[-301])
}
wealth_dist
# Define stock tickers
stocks <- c(NVDA = 1, CASH =0)
names(stocks)[-2]
library(tidyverse)
library(xts)
initial_wealth=1
horizon=301
# Define stock tickers
stocks <- c(NVDA = 1, CASH =0)
set.seed=1
palet <- sample(colors(), 1)
wealth_dist<- data.frame(Start= as.vector(stocks), row.names = names(stocks))
portfolio<-numeric(horizon)
portfolio[1]<-1
# Read all CSV files and store them in a named list
data_list <- lapply(names(stocks)[-2], function(ticker) {
df <- read.csv(paste0("dataset/",ticker, ".csv"))[,-7]  # Remove 7th column
df$Date <- as.Date(df$Date, format="%d/%m/%Y")  # Convert Date column
df<-arrange(df, Date)
df$Price <- gsub(",", "", df$Price)  # Remove commas
df$Price <- trimws(df$Price)  # Trim spaces
df$Price <- as.numeric(df$Price)  # Convert to numeric
df$Change <- c(diff(df$Price) / df$Price[-301],NA)  # Calculate daily price change
df$Price<-df$Price/df$Price[1]
return(df)
})
# Assign names to the list for easier reference
names(data_list) <- names(stocks)[-2]
initial_wealth
welath_dist
wealth_dist
portfolio
wealth_dist[1,i]
wealth_dist[,i]
wealth_dist
rebalance_days<-c()
wealth_max<-numeric(301)
wealth_max[1]<-wealth_dist[,1]
for (i in 2:horizon){
wealth_dist[,i]<-wealth_dist[,i-1]*(1+change_df[i-1,-1])
portfolio[i]=sum(wealth_dist[,i])
portfolio_max[i]<-max(portfolio_max,portfolio[i])
drawdown<-portfolio/portfolio_max
if (drawdown<0.95){
wealth_dist[2,i]<-wealth_dist[1,i]
wealth_dist[1,i]<-0
rebalance_days<-c(rebalance_days,i)
}
}
change_df[i-1,-1]
wealth_dist[1,i-1]
rebalance_days<-c()
wealth_max<-numeric(301)
wealth_max[1]<-wealth_dist[,1]
for (i in 2:horizon){
wealth_dist[1,i]<-wealth_dist[1,i-1]*(1+change_df[i-1,-1])
portfolio[i]=sum(wealth_dist[,i])
wealth_max[i]<-max(wealth_max[i],wealth_dist[1,i])
drawdown<-wealth_dist[1,i]/wealth_max[i]
if (drawdown<0.95){
wealth_dist[2,i]<-wealth_dist[1,i]
wealth_dist[1,i]<-0
rebalance_days<-c(rebalance_days,i)
}
}
plot(as.xts(wealth_dist))
plot(as.xts(wealth_dist,data_list[[1]]$Date))
wealth_dist
rebalance_days<-c()
drawdown<-wealth_max<-numeric(301)
wealth_max[1]<-wealth_dist[,1]
for (i in 2:horizon){
wealth_dist[1,i]<-wealth_dist[1,i-1]*(1+change_df[i-1,-1])
portfolio[i]=sum(wealth_dist[,i])
wealth_max[i]<-max(wealth_max[i],wealth_dist[1,i])
drawdown[i]<-wealth_dist[1,i]/wealth_max[i]
if (drawdown<0.95){
wealth_dist[2,i]<-wealth_dist[1,i]
wealth_dist[1,i]<-0
rebalance_days<-c(rebalance_days,i)
}
}
rebalance_days<-c()
drawdown<-wealth_max<-numeric(301)
wealth_max[1]<-wealth_dist[,1]
for (i in 2:horizon){
wealth_dist[1,i]<-wealth_dist[1,i-1]*(1+change_df[i-1,-1])
portfolio[i]=sum(wealth_dist[,i])
wealth_max[i]<-max(wealth_max[i],wealth_dist[1,i])
drawdown[i]<-wealth_dist[1,i]/wealth_max[i]
if (drawdown[i]<0.95){
wealth_dist[2,i]<-wealth_dist[1,i]
wealth_dist[1,i]<-0
rebalance_days<-c(rebalance_days,i)
}
}
plot(as.xts(drawdown,data_list[[1]]$Date))
plot(as.xts(drawdown[-1],data_list[[1]]$Date[-1]))
plot(wealth_dist)
plot(wealth_dist)
plot(wealth_dist[1,])
wealth_dist
wealth_max
rebalance_days<-c()
drawdown<-wealth_max<-numeric(301)
wealth_max[1]<-wealth_dist[,1]
for (i in 2:horizon){
wealth_dist[1,i]<-wealth_dist[1,i-1]*(1+change_df[i-1,-1])
wealth_dist[2,i]<-wealth_dist[2,i-1]
portfolio[i]=sum(wealth_dist[,i])
wealth_max[i]<-max(wealth_max[i],wealth_dist[1,i])
drawdown[i]<-wealth_dist[1,i]/wealth_max[i]
if (drawdown[i]<0.95){
wealth_dist[2,i]<-wealth_dist[1,i]
wealth_dist[1,i]<-0
rebalance_days<-c(rebalance_days,i)
}
}
drawdown
wealth_dist
wealth_dist[1,i]
wealth_max
rebalance_days<-c()
drawdown<-wealth_max<-numeric(301)
wealth_max[1]<-wealth_dist[,1]
for (i in 2:horizon){
wealth_dist[1,i]<-wealth_dist[1,i-1]*(1+change_df[i-1,-1])
wealth_dist[2,i]<-wealth_dist[2,i-1]
portfolio[i]=sum(wealth_dist[,i])
wealth_max[i]<-max(wealth_max[i-1],wealth_dist[1,i])
drawdown[i]<-wealth_dist[1,i]/wealth_max[i]
if (drawdown[i]<0.95){
wealth_dist[2,i]<-wealth_dist[1,i]
wealth_dist[1,i]<-0
rebalance_days<-c(rebalance_days,i)
}
}
drawdown
plot(portfolio)
wealth_dist[,i]
wealth_dist
for (i in 2:horizon){
wealth_dist[1,i]<-wealth_dist[1,i-1]*(1+change_df[i-1,-1])
wealth_dist[2,i]<-wealth_dist[2,i-1]  #Cash
portfolio[i]=sum(wealth_dist[,i])
wealth_max[i]<-max(wealth_max[i-1],wealth_dist[1,i])
drawdown[i]<-wealth_dist[1,i]/wealth_max[i]
if (drawdown[i]<0.95){
wealth_dist[2,i]<-wealth_dist[1,i]
wealth_dist[1,i]<-0
rebalance_days<-c(rebalance_days,i)
}
}
wealth_dist
wealth_dist[2,34]
i=35
horizon
wealth_dist[2,i]<-wealth_dist[2,i-1]
wealth_dist
wealth_max[1]<-wealth_dist[,1]
for (i in 2:horizon){
wealth_dist[1,i]<-wealth_dist[1,i-1]*(1+change_df[i-1,-1])
wealth_dist[2,i]<-wealth_dist[2,i-1]  #Cash
portfolio[i]=sum(wealth_dist[,i])
wealth_max[i]<-max(wealth_max[i-1],wealth_dist[1,i])
drawdown[i]<-wealth_dist[1,i]/wealth_max[i]
if (drawdown[i]<0.95 and wealth_dist[1,i]!=0){
for (i in 2:horizon){
wealth_dist[1,i]<-wealth_dist[1,i-1]*(1+change_df[i-1,-1])
wealth_dist[2,i]<-wealth_dist[2,i-1]  #Cash
portfolio[i]=sum(wealth_dist[,i])
wealth_max[i]<-max(wealth_max[i-1],wealth_dist[1,i])
drawdown[i]<-wealth_dist[1,i]/wealth_max[i]
if (drawdown[i]<0.95 & wealth_dist[1,i]!=0){
wealth_dist[2,i]<-wealth_dist[1,i]
wealth_dist[1,i]<-0
rebalance_days<-c(rebalance_days,i)
}
}
plot(as.xts(portfolio), type = "l", col = "turquoise", lwd = 2,
xlab = "Time", ylab = "Price", main = "Portfolio")
plot(portfolio, type = "l", col = "turquoise", lwd = 2,
xlab = "Time", ylab = "Price", main = "Portfolio")
#Individual stocks performance
for (i in 1:length(stocks)){
lines(data_list[[i]]$Price, col=palet[i],lwd=0.5)
}
drawdown<-wealth_max<-numeric(301)
wealth_max[1]<-wealth_dist[,1]
for (i in 2:horizon){
wealth_dist[1,i]<-wealth_dist[1,i-1]*(1+change_df[i-1,-1])
wealth_dist[2,i]<-wealth_dist[2,i-1]  #Cash
portfolio[i]=sum(wealth_dist[,i])
wealth_max[i]<-max(wealth_max[i-1],wealth_dist[1,i])
drawdown[i]<-wealth_dist[1,i]/wealth_max[i]
if (drawdown[i]<0.95 & wealth_dist[1,i]!=0){
wealth_dist[2,i]<-wealth_dist[1,i]
wealth_dist[1,i]<-0
rebalance_days<-c(rebalance_days,i)
} else if (data_list[[1]]$Price[i]>=wealth_dist[2,i]){
wealth_dist[1,i]<-wealth_dist[2,i]
wealth_dist[2,i]<-0
}
}
names(portfolio)<-names(wealth_dist)<-data_list[[1]]$Date
rebalance_days<-data_list[[1]]$Date[rebalance_days]
plot(portfolio, type = "l", col = "turquoise", lwd = 2,
xlab = "Time", ylab = "Price", main = "Portfolio")
library(tidyverse)
library(xts)
initial_wealth=1
horizon=301
# Define stock tickers
stocks <- c(NVDA = 1, CASH =0)
set.seed=1
palet <- sample(colors(), 1)
wealth_dist<- data.frame(Start= as.vector(stocks), row.names = names(stocks))
portfolio<-numeric(horizon)
portfolio[1]<-1
# Read all CSV files and store them in a named list
data_list <- lapply(names(stocks)[-2], function(ticker) {
df <- read.csv(paste0("dataset/",ticker, ".csv"))[,-7]  # Remove 7th column
df$Date <- as.Date(df$Date, format="%d/%m/%Y")  # Convert Date column
df<-arrange(df, Date)
df$Price <- gsub(",", "", df$Price)  # Remove commas
df$Price <- trimws(df$Price)  # Trim spaces
df$Price <- as.numeric(df$Price)  # Convert to numeric
df$Change <- c(diff(df$Price) / df$Price[-301],NA)  # Calculate daily price change
df$Price<-df$Price/df$Price[1]
return(df)
})
# Assign names to the list for easier reference
names(data_list) <- names(stocks)[-2]
#Percentage Change to the next day closing price
change_df<-data_list[[1]]$Date[-301]
for (i in 1:length(stocks)){
change_df<-cbind(change_df,data_list[[i]]$Change[-301])
}
length(stocks)
library(tidyverse)
library(xts)
initial_wealth=1
horizon=301
# Define stock tickers
stocks <- c(NVDA = 1, CASH =0)
set.seed=1
palet <- sample(colors(), 1)
wealth_dist<- data.frame(Start= as.vector(stocks), row.names = names(stocks))
portfolio<-numeric(horizon)
portfolio[1]<-1
# Read all CSV files and store them in a named list
data_list <- lapply(names(stocks)[-2], function(ticker) {
df <- read.csv(paste0("dataset/",ticker, ".csv"))[,-7]  # Remove 7th column
df$Date <- as.Date(df$Date, format="%d/%m/%Y")  # Convert Date column
df<-arrange(df, Date)
df$Price <- gsub(",", "", df$Price)  # Remove commas
df$Price <- trimws(df$Price)  # Trim spaces
df$Price <- as.numeric(df$Price)  # Convert to numeric
df$Change <- c(diff(df$Price) / df$Price[-301],NA)  # Calculate daily price change
df$Price<-df$Price/df$Price[1]
return(df)
})
# Assign names to the list for easier reference
names(data_list) <- names(stocks)[-2]
#Percentage Change to the next day closing price
change_df<-data_list[[1]]$Date[-301]
for (i in 1:length(stocks)){
change_df<-cbind(change_df,data_list[[1]]$Change[-301])
}
rebalance_days<-c()
drawdown<-wealth_max<-numeric(301)
wealth_max[1]<-wealth_dist[,1]
for (i in 2:horizon){
wealth_dist[1,i]<-wealth_dist[1,i-1]*(1+change_df[i-1,-1])
wealth_dist[2,i]<-wealth_dist[2,i-1]  #Cash
portfolio[i]=sum(wealth_dist[,i])
wealth_max[i]<-max(wealth_max[i-1],wealth_dist[1,i])
drawdown[i]<-wealth_dist[1,i]/wealth_max[i]
if (drawdown[i]<0.95 & wealth_dist[1,i]!=0){
wealth_dist[2,i]<-wealth_dist[1,i]
wealth_dist[1,i]<-0
rebalance_days<-c(rebalance_days,i)
} else if (wealth_dist[1,i]==0 & data_list[[1]]$Price[i]>=wealth_dist[2,i]){
wealth_dist[1,i]<-wealth_dist[2,i]
wealth_dist[2,i]<-0
}
}
data_list[[1]]$Price[i]>=wealth_dist[2,i]
#Percentage Change to the next day closing price
change_df<-data_list[[1]]$Date[-301]
for (i in 1:(length(stocks)-1)){
change_df<-cbind(change_df,data_list[[i]]$Change[-301])
}
rebalance_days<-c()
drawdown<-wealth_max<-numeric(301)
wealth_max[1]<-wealth_dist[,1]
for (i in 2:horizon){
wealth_dist[1,i]<-wealth_dist[1,i-1]*(1+change_df[i-1,-1])
wealth_dist[2,i]<-wealth_dist[2,i-1]  #Cash
portfolio[i]=sum(wealth_dist[,i])
wealth_max[i]<-max(wealth_max[i-1],wealth_dist[1,i])
drawdown[i]<-wealth_dist[1,i]/wealth_max[i]
if (drawdown[i]<0.95 & wealth_dist[1,i]!=0){
wealth_dist[2,i]<-wealth_dist[1,i]
wealth_dist[1,i]<-0
rebalance_days<-c(rebalance_days,i)
} else if (wealth_dist[1,i]==0 & data_list[[1]]$Price[i]>=wealth_dist[2,i]){
wealth_dist[1,i]<-wealth_dist[2,i]
wealth_dist[2,i]<-0
}
}
wealth_dist
names(portfolio)<-names(wealth_dist)<-data_list[[1]]$Date
rebalance_days<-data_list[[1]]$Date[rebalance_days]
plot(portfolio, type = "l", col = "turquoise", lwd = 2,
xlab = "Time", ylab = "Price", main = "Portfolio")
#Individual stocks performance
for (i in 1:length(stocks)){
lines(data_list[[i]]$Price, col=palet[i],lwd=0.5)
}
